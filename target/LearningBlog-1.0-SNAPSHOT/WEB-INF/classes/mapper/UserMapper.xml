<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imeiman.ssm.blog.mapper.UserMapper" >
    <resultMap id="BaseResultMap" type="com.imeiman.ssm.blog.domain.entity.User" >
        <id column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="INTEGER" />
        <result column="user_pass" property="userPass" jdbcType="VARCHAR" />
        <result column="user_nickname" property="userNickname" jdbcType="VARCHAR" />
        <result column="user_email" property="userEmail" jdbcType="INTEGER" />
        <result column="user_url" property="userUrl" jdbcType="INTEGER" />
        <result column="user_avatar" property="userAvatar" jdbcType="INTEGER" />
        <result column="user_last_login_ip" property="userLastLoginIp" jdbcType="INTEGER" />
        <result column="user_register_time" property="userRegisterTime" jdbcType="DATE" />
        <result column="user_last_login_time" property="userLastLoginTime" jdbcType="DATE" />
        <result column="user_status" property="userStatus" jdbcType="INTEGER" />
        <result column="user_role" property="userRole" jdbcType="VARCHAR" />
    </resultMap>
<!--
<include refid="Base_Column_List"/>

标签被用来引用之前定义的Base_Column_List SQL片段。
-->
    <sql id="Base_Column_List" >
        user_id,user_name,user_pass,user_nickname,user_email,user_url,user_avatar,
            user_last_login_ip,user_register_time,user_last_login_time,user_status,
            user_role
    </sql>
    <update id="updateUser"  parameterType="com.imeiman.ssm.blog.domain.entity.User">
        update user
        set
        <if test="userName!=null and userName !=''">
            user_name = #{userName}
        </if>
        <if test="userPass!=null and userPass !=''">
            user_pass = #{userPass}
        </if>
        <if test="userNickname!=null and userNickname !=''">
            user_nickname = #{userNickname}
        </if>
        <if test="userEmail!=null and userEmail !=''">
            user_email = #{userEmail}
        </if>
        <if test="userLastLoginTime!=null">
            user_last_login_time = #{userLastLoginTime}
        </if>
        <if test="userLastLoginIp!=null and userLastLoginIp !=''">
            user_last_login_ip = #{userLastLoginIp}
        </if>
        where user_id = #{userId}

    </update>

    <select id="getById" resultType="com.imeiman.ssm.blog.domain.entity.User">
        select *
        from user
        where user_id = #{id}
    </select>
    <select id="getUserByNameOrEmail" resultType="com.imeiman.ssm.blog.domain.entity.User">
        select *
        from user
        where user_name = #{username} or user_email = #{username}
    </select>
    <!--
    ORDER BY子句用于指定结果集的排序方式。当你看到ORDER BY article_status ASC, article_order DESC, article_id DESC这样的排序条件时，它意味着查询结果将首先按照article_status字段的值进行升序（ASC）排序，如果article_status的值相同，则进一步按照article_order字段的值进行降序（DESC）排序，如果article_order的值也相同，则最后按照article_id字段的值进行降序（DESC）排序。

    -->




</mapper>