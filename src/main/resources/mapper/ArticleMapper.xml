<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imeiman.ssm.blog.mapper.ArticleMapper" >
    <resultMap id="BaseResultMap" type="com.imeiman.ssm.blog.domain.entity.Article" >
        <id column="article_id" property="articleId" jdbcType="INTEGER" />
        <result column="article_user_id" property="articleUserId" jdbcType="INTEGER" />
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
        <result column="article_content" property="articleContent" jdbcType="VARCHAR" />
        <result column="article_view_count" property="articleViewCount" jdbcType="INTEGER" />
        <result column="article_comment_count" property="articleCommentCount" jdbcType="INTEGER" />
        <result column="article_like_count" property="articleLikeCount" jdbcType="INTEGER" />
        <result column="article_is_comment" property="articleIsComment" jdbcType="INTEGER" />
        <result column="article_status" property="articleStatus" jdbcType="INTEGER" />
        <result column="article_order" property="articleOrder" jdbcType="INTEGER" />
        <result column="article_update_time" property="articleUpdateTime" jdbcType="DATE" />
        <result column="article_create_time" property="articleCreateTime" jdbcType="DATE" />
        <result column="article_summary" property="articleSummary" jdbcType="VARCHAR" />
        <result column="article_thumbnail" property="articleThumbnail" jdbcType="VARCHAR" />

    </resultMap>
<!--
<include refid="Base_Column_List"/>

标签被用来引用之前定义的Base_Column_List SQL片段。
-->
    <sql id="Base_Column_List" >
        article_id,article_user_id,article_title,article_content,article_view_count,article_comment_count,
            article_like_count,article_is_comment,article_status,article_order,article_update_time,
            article_create_time,article_summary,article_thumbnail
    </sql>
<!--
ORDER BY子句用于指定结果集的排序方式。当你看到ORDER BY article_status ASC, article_order DESC, article_id DESC这样的排序条件时，它意味着查询结果将首先按照article_status字段的值进行升序（ASC）排序，如果article_status的值相同，则进一步按照article_order字段的值进行降序（DESC）排序，如果article_order的值也相同，则最后按照article_id字段的值进行降序（DESC）排序。

-->

    <select id="pageArticle" resultType="com.imeiman.ssm.blog.domain.entity.Article">
        select <include refid="Base_Column_List"></include>
        from article
        <where>
            <if test="status!=null">
                article_status=#{status}
            </if>
        </where>
        order by article_status asc,article_order desc,article_id desc
        limit #{pageIndex},#{pageSize}
    </select>
    <select id="getArticleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) AS total_rows FROM article;
    </select>
    <select id="getAllByArticleCommentCountInteger" resultType="java.lang.Integer">
        SELECT sum(article_comment_count) AS total_rows FROM article;
    </select>
    <select id="getArticleViewCountInteger" resultType="java.lang.Integer">
        select sum(article_view_count) from article
    </select>
    <select id="getArticleLastUpdateTimeDate" resultType="java.sql.Date">
        SELECT max(article_update_time) FROM article
    </select>
    <select id="getById" resultType="com.imeiman.ssm.blog.domain.entity.Article">
        select * from article where article_id = #{articleId}
    </select>


</mapper>